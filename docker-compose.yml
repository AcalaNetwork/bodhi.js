services:
  # -------------------------------- #
  # ---------- Subql Land ---------- #
  # -------------------------------- #
  postgres:
    image: postgres:12-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres

  subquery-node:
    build:
      context: .
      dockerfile: docker/subql-node.Dockerfile
      target: subql-node
    depends_on:
      postgres:
        condition: service_started
      mandala-node:
        condition: service_healthy
    ports:
      - 3000:3000
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --network-endpoint=ws://mandala-node:9944
      - --db-schema=acala_evm
      - --log-level=debug
      - --unsafe
      - --disable-historical

  graphql-engine:
    image: onfinality/subql-query:v1.4.0
    ports:
      - 3001:3001
    depends_on:
      - postgres
      - subquery-node
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      PORT: 3001
    command:
      - --name=acala_evm
      - --playground
      - --indexer=http://subquery-node:3000

  eth-rpc-adapter-server-with-subql:
    build:
      context: .
      dockerfile: docker/eth-rpc-adapter-server.Dockerfile
      target: eth-rpc-adapter
    ports:
      - 8545:8545
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_started
      subquery-node:
        condition: service_started
      graphql-engine:
        condition: service_started
      eth-rpc-adapter-karura-ready:
        condition: service_completed_successfully
    restart: always
    command:
      - --endpoint=ws://mandala-node:9944
      - --subql=http://graphql-engine:3001
      - --port=8545
      - --localMode

  eth-rpc-adapter-test:
    build:
      context: .
      dockerfile: docker/eth-rpc-adapter-test.Dockerfile
      target: eth-rpc-adapter-test
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      eth-rpc-adapter-with-subql-ready:
        condition: service_completed_successfully

  # ------------------------------------ #
  # ---------- No Subql Realm ---------- #
  # ------------------------------------ #
  mandala-node:
    image: ghcr.io/acalanetwork/mandala-node:sha-104e277
    ports:
      - 9933:9933
      - 9944:9944
    healthcheck:
      test: "curl --fail -X POST -H \"Content-Type: application/json\" http://localhost:9933 -d \"{\"jsonrpc\": \"2.0\" }\" || exit 1"
      interval: 10s
      retries: 10
      start_period: 30s
    command:
      - --dev
      # - -lruntime=debug
      # - -levm=debug
      - --ws-port=9944
      - --ws-external
      - --rpc-port=9933
      - --rpc-external
      - --rpc-cors=all
      - --rpc-methods=unsafe
      - --pruning=archive
      - --instant-sealing
      - --tmp

  eth-providers-test:
    build:
      context: .
      dockerfile: docker/eth-providers-test.Dockerfile
      target: eth-providers-test
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      mandala-node:
        condition: service_healthy

  eth-rpc-adapter-server:
    build:
      context: .
      dockerfile: docker/eth-rpc-adapter-server.Dockerfile
      target: eth-rpc-adapter
    ports:
      - 8545:8545
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      mandala-node:
        condition: service_healthy
    command:
      - --endpoint=ws://mandala-node:9944
      - --port=8545
      - --localMode

  eth-rpc-adapter-server-rich:
    build:
      context: .
      dockerfile: docker/eth-rpc-adapter-server.Dockerfile
      target: eth-rpc-adapter
    ports:
      - 8545:8545
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      mandala-node:
        condition: service_healthy
    command:
      - --endpoint=ws://mandala-node:9944
      - --port=8545
      - --localMode
      - --richMode

  eth-rpc-adapter-server-karura:
    build:
      context: .
      dockerfile: docker/eth-rpc-adapter-server.Dockerfile
      target: eth-rpc-adapter
    ports:
      - 8546:8546
    environment:
      - HEALTHCHECK_PORT=8546
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    restart: always
    command:
      - --endpoint=wss://acala-karura-eu-1.bdnodes.net:8443/parachain?auth=4VFR_UEvc8mUAd58z11nSRqp-EBZcqPl14j_MgEm-4E
      - --subql=https://subql-query-karura.aca-api.network
      - --port=8546

  waffle-examples-test:
    build:
      context: .
      dockerfile: docker/waffle-examples-test.Dockerfile
      target: waffle-examples
    volumes:
      - ./:/app
      - monorepo_yarn_cache:/app/.yarn/cache
      - monorepo_node_modules:/app/node_modules
    depends_on:
      mandala-node:
        condition: service_healthy

  chain-ready:
    image: hello-world
    depends_on:
      mandala-node:
        condition: service_healthy

  eth-rpc-adapter-ready:
    image: hello-world
    depends_on:
      eth-rpc-adapter-server:
        condition: service_healthy

  eth-rpc-adapter-karura-ready:
    image: hello-world
    depends_on:
      eth-rpc-adapter-server-karura:
        condition: service_healthy

  eth-rpc-adapter-with-subql-ready:
    image: hello-world
    depends_on:
      eth-rpc-adapter-server-with-subql:
        condition: service_healthy

  waffle-tutorials-test:
    build:
      context: .
      dockerfile: docker/waffle-tutorials-test.Dockerfile
      target: waffle-tutorials
    depends_on:
      mandala-node:
        condition: service_healthy
  hardhat-tutorials-test:
    build:
      context: .
      dockerfile: docker/hardhat-tutorials-test.Dockerfile
      target: hardhat-tutorials
    volumes:
      - ./examples/hardhat-tutorials/:/app
      - hardhat_yarn_cache:/app/.yarn/cache
      - hardhat_node_modules:/app/node_modules
    depends_on:
      eth-rpc-adapter-server-rich:
        condition: service_healthy
  truffle-tutorials-test:
    build:
      context: .
      dockerfile: docker/truffle-tutorials-test.Dockerfile
      target: truffle-tutorials
    environment:
      - ENDPOINT_URL=ws://mandala-node:9944
    volumes:
      - ./examples/truffle-tutorials:/app
      - truffle_yarn_cache:/app/.yarn/cache
      - truffle_node_modules:/app/node_modules
    depends_on:
      eth-rpc-adapter-server:
        condition: service_healthy

volumes:
  monorepo_node_modules:
  monorepo_yarn_cache:
  hardhat_yarn_cache:
  hardhat_node_modules:
  truffle_yarn_cache:
  truffle_node_modules:
